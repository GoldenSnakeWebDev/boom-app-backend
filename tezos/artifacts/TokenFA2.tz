{ parameter
    (or (or (pair %balance_of
               (contract %callback
                  (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
               (list %requests (pair (address %owner) (nat %token_id))))
            (list %mint (pair (nat %amount) (address %to_))))
        (or (list %transfer
               (pair (address %from_)
                     (list %txs (pair (pair (nat %amount) (address %to_)) (nat %token_id)))))
            (list %update_operators
               (or (pair %add_operator (pair (address %operator) (address %owner)) (nat %token_id))
                   (pair %remove_operator (pair (address %operator) (address %owner)) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (address %admin) (list %all_tokens nat))
                (big_map %ledger (pair address nat) nat)
                (big_map %metadata string bytes))
          (pair (nat %next_token_id) (big_map %operators (pair address address nat) unit))
          (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
          (big_map %total_supply nat nat)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 DUP ;
                 CDR ;
                 MAP { DUP ;
                       DUP 4 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       DIG 2 ;
                       GET ;
                       IF_NONE { PUSH nat 0 } {} ;
                       PAIR } ;
                 SWAP ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS }
               { SENDER ;
                 PUSH string "NOT_ADMIN" ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 ITER { SWAP ;
                        DUP ;
                        CDR ;
                        CAR ;
                        CAR ;
                        DUP 3 ;
                        CAR ;
                        DUP 3 ;
                        CDR ;
                        CDR ;
                        CAR ;
                        DUP 3 ;
                        MEM ;
                        DUP 3 ;
                        DIG 5 ;
                        CDR ;
                        PAIR ;
                        DUP 7 ;
                        DIG 2 ;
                        IF { DROP } { FAILWITH } ;
                        DUP 5 ;
                        PUSH nat 1 ;
                        DUP 4 ;
                        COMPARE ;
                        LE ;
                        IF { DROP } { FAILWITH } ;
                        PUSH nat 0 ;
                        DIG 2 ;
                        COMPARE ;
                        EQ ;
                        IF { DROP 2 }
                           { DUP 4 ;
                             PUSH nat 0 ;
                             DUP 5 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 4 ;
                             GET ;
                             IF_NONE { PUSH nat 0 } {} ;
                             COMPARE ;
                             EQ ;
                             IF { DROP } { FAILWITH } ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DUP 3 ;
                             GET ;
                             IF_NONE { DUP 5 ; FAILWITH } {} ;
                             PUSH nat 1 ;
                             ADD ;
                             PUSH nat 1 ;
                             DUP 4 ;
                             ADD ;
                             DUP 5 ;
                             CDR ;
                             DUP 6 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DUP 7 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             PUSH nat 1 ;
                             DIG 6 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             DUP 6 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             DIG 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             SOME ;
                             DIG 4 ;
                             UPDATE ;
                             DUP 2 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR } } ;
                 SWAP ;
                 DIG 2 ;
                 DROP 2 ;
                 NIL operation } }
           { IF_LEFT
               { SENDER ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 ITER { SWAP ;
                        DUP 2 ;
                        CAR ;
                        SWAP ;
                        DIG 2 ;
                        CDR ;
                        ITER { SWAP ;
                               DUP 2 ;
                               CAR ;
                               CDR ;
                               DUP 3 ;
                               CDR ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               DUP 7 ;
                               CDR ;
                               CAR ;
                               CDR ;
                               DUP 3 ;
                               DUP 8 ;
                               PAIR ;
                               DUP 7 ;
                               PAIR ;
                               MEM ;
                               DUP 3 ;
                               DUP 7 ;
                               PAIR ;
                               DUP 4 ;
                               DUP 6 ;
                               PAIR ;
                               DUP 10 ;
                               CDR ;
                               CDR ;
                               CAR ;
                               DIG 5 ;
                               MEM ;
                               PUSH string "FA2_NOT_OPERATOR" ;
                               DIG 4 ;
                               DUP 9 ;
                               DUP 11 ;
                               COMPARE ;
                               EQ ;
                               OR ;
                               IF { DROP } { FAILWITH } ;
                               DUP 11 ;
                               SWAP ;
                               IF { DROP } { FAILWITH } ;
                               PUSH string "FA2_TX_DENIED" ;
                               PUSH nat 1 ;
                               DUP 5 ;
                               COMPARE ;
                               LE ;
                               IF { DROP } { FAILWITH } ;
                               PUSH nat 0 ;
                               DIG 3 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 3 }
                                  { DUP 8 ;
                                    PUSH nat 1 ;
                                    DUP 6 ;
                                    DUP 5 ;
                                    GET ;
                                    IF_NONE { PUSH nat 0 } {} ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP } { FAILWITH } ;
                                    DUP 8 ;
                                    DIG 3 ;
                                    DUP 6 ;
                                    COMPARE ;
                                    NEQ ;
                                    IF { DROP } { FAILWITH } ;
                                    DUP 7 ;
                                    PUSH nat 0 ;
                                    DUP 5 ;
                                    DUP 4 ;
                                    GET ;
                                    IF_NONE { PUSH nat 0 } {} ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP } { FAILWITH } ;
                                    DUG 2 ;
                                    NONE nat ;
                                    SWAP ;
                                    UPDATE ;
                                    PUSH nat 1 ;
                                    DIG 2 ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE } } ;
                        SWAP ;
                        DROP } ;
                 SWAP ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 DUP 2 ;
                 CDR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 SENDER ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 ITER { SWAP ;
                        DUP 2 ;
                        IF_LEFT {} {} ;
                        PUSH string "FA2_NOT_OWNER" ;
                        DUP 2 ;
                        CAR ;
                        CDR ;
                        DUP 6 ;
                        COMPARE ;
                        EQ ;
                        IF { DROP } { FAILWITH } ;
                        DUP ;
                        CDR ;
                        DUP 2 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        SWAP ;
                        CAR ;
                        CDR ;
                        PAIR ;
                        DIG 2 ;
                        IF_LEFT
                          { DROP ; SWAP ; UNIT ; DIG 2 ; SWAP ; SOME ; SWAP ; UPDATE }
                          { DROP ; NONE unit ; SWAP ; UPDATE } } ;
                 SWAP ;
                 DROP ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR } ;
             PAIR ;
             NIL operation } ;
         PAIR } }

